Option 1 (Current):
	WardSpots are sorted by priority, priorities are fairly randomly distributed in the hopes that the best wards get the highest priority. This generally means 2 rune wards and 1 random ward.
	Whichever WardSpots have the highest priority will be placed, regardless of actual priority value
	When a ward is out of travel range it may be temporarily ignored, no other wards are put in place. This allows for a bot to be send the short lane and not walking all the way to the long lane to block the pull camp.

Pros:
 - Only the best of the best ward spots are used.

Cons:
 - The bot's warding behavior is pretty static and easily recognized; he only places new wards when there are less then 3 up. This is very unhuman.
 - Because of the hard cap on wards up we may not see a really good ward placed.
 - Not much variety in wards; all wards are considered and only the top few get selected. These top few will generally always be the same.
 - The bot spends a lot of time traveling to far away ward spots.

Option 2:
	Priority system where wards above a threshold priority (e.g. 100) get selected
	The amount of selected wards isn't capped, it may be 10, 20 or anything else
	Whichever wards are closest will get placed
	Only nearby wards will actually be placed, range may increase the higher the priority?

Pros:
 - More variety; more wards could be considered and whichever is closest gets placed.
 - No wards cap. More human. Allows for placement of really good wards.
 - Easier to balance ward spot priorities
 - Could have a soft limit in place aswell that increases utility value (.e.g if >150 priority this ward gets priority over pushing a lane)
 
Cons:
 - Might place worse wards.
 - Might place too many wards.
 - Might not place far away wards that are really important (e.g. Kongor).
 - 